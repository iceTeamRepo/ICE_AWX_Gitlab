---
- name: Install GitLab HA
  hosts: '{{ hostname }}'
  become: true
  become_user: root
  serial: 1 
  vars:
    praefect_nodes: "{{ groups['praefect'] }}"
    praefect_leader: "{{ praefect_nodes | sort | first }}"
    aws_access_key_id: "0eGWXa9lTakAfMPdEHwW"
    aws_secret_access_key: "0hPhcw89XuX7cfjc36ELoARNpHaW30NxMUGMrt4T"
  tasks:
    - name: Install Pre requsites packages for GitLab
      ansible.builtin.apt:
        name: '{{ item }}'
        state: latest
      with_items:
        - curl 
        - openssh-server
        - ca-certificates
        - tzdata
        - perl
        - unzip
        - software-properties-common
      when: ansible_os_family == "Debian" 

    - name: Add GitLab package repository
      ansible.builtin.shell: "curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash"
      args:
        creates: /etc/apt/sources.list.d/gitlab_gitlab-ee.list
  
    - name: Temporarily disable swap
      ansible.builtin.command: swapoff -a
      become: true
    
    - name: Install GitLab
      ansible.builtin.apt:
        name: "gitlab-ee=17.10.1-ee.0"
        state: present

    - name: Update /etc/gitlab/gitlab.rb
      ansible.builtin.template:
        src: templates/gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
        owner: root
        group: root
        mode: '0600'
      register: template

    ### Gitaly 관련 전처리#################################
    - name: Create /var/opt/gitlab/git-data/repositories directory
      ansible.builtin.file:
        path: /var/opt/gitlab/git-data/repositories
        state: directory
        mode: '0777'
      when: inventory_hostname.startswith('gitaly')
    ######################################################

    - name: Configure GitLab
      ansible.builtin.shell: "/opt/gitlab/bin/gitlab-ctl reconfigure"
      when: template.changed
      register: reconfigure_output

    - name: Configure GitLab
      ansible.builtin.shell: "/opt/gitlab/bin/gitlab-ctl restart"
      when: template.changed
      register: restart_output

    ### PgBouncer 관련 후처리##############################
    - name: Create .pgpass and reload consul if hostname is pgbouncer
      ansible.builtin.shell: |
        echo -e "{{ pgbouncer_password | default('pgbouncerpassword') }}\n{{ pgbouncer_password | default('pgbouncerpassword') }}" | sudo gitlab-ctl write-pgpass \
          --host 127.0.0.1 \
          --database pgbouncer \
          --user pgbouncer \
          --hostuser gitlab-consul
        sudo gitlab-ctl hup pgbouncer
      when: inventory_hostname.startswith('pgbouncer') 

    ### Praefect DB 관련 후처리##############################
    - name: Create Praefect DB role
      ansible.builtin.shell: |
        /opt/gitlab/embedded/bin/psql -U gitlab-psql -h "127.0.0.1" -d template1 <<EOF
        CREATE ROLE praefect WITH LOGIN CREATEDB PASSWORD 'praefectpassword';
        EOF
      when: inventory_hostname.startswith('praefect_db')

    - name: Create Praefect database
      ansible.builtin.shell: |
        PGPASSWORD=praefectpassword /opt/gitlab/embedded/bin/psql -U praefect -h "127.0.0.1" -d template1 <<EOF
        CREATE DATABASE praefect_production WITH ENCODING=UTF8;
        EOF
      when: inventory_hostname.startswith('praefect_db')

    ### Praefect & Sidekiq Node 관련 후처리############################## 
    - name: Skip auto reconfigure
      file:
        path: /etc/gitlab/skip-auto-reconfigure
        state: touch
      when: (inventory_hostname == praefect_leader) or (inventory_hostname.startswith('sidekiq'))

    - name: Re-run gitlab-ctl reconfigure on leader
      command: gitlab-ctl reconfigure
      when: (inventory_hostname == praefect_leader) or (inventory_hostname.startswith('sidekiq'))

    #########################################################
    - name: Check GitLab status
      command: "/opt/gitlab/bin/gitlab-ctl status"
      register: status_output

    - debug:
        var: reconfigure_output.stdout_lines
    - debug:
        var: restart_output.stdout_lines
    - debug:
        var: status_output.stdout_lines 

# Consul 확인
# sudo /opt/gitlab/embedded/bin/consul members

# PSQL 확인
# sudo gitlab-ctl patroni members

# PGBouncer 후처리
# gitlab-ctl write-pgpass --host 127.0.0.1 --database pgbouncer --user pgbouncer --hostuser gitlab-consul
# gitlab-ctl pgb-console #  pgbouncerpassword
# show databases ; show clients ;

# praefect 확인 
# sudo GRPC_TRACE=all GRPC_VERBOSITY=DEBUG gitlab-rake gitlab:praefect:check
# sudo -u git /opt/gitlab/embedded/bin/praefect -config /var/opt/gitlab/praefect/config.toml sql-ping

# gitaly 확인
# sudo gitlab-rake gitlab:gitaly:check 2>&1 | sudo tee /etc/gitlab/gitaly_check