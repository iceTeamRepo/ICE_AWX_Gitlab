---
- name: Install GitLab HA
  hosts: '{{ hostname }}'
  become: true
  become_user: root
  serial: '{{ serial_number | default("1") }}'

  tasks:
    - name: Install Pre requsites packages for GitLab
      ansible.builtin.apt:
        name: '{{ item }}'
        state: latest
      with_items:
        - curl 
        - openssh-server
        - ca-certificates
        - tzdata
        - perl
        - unzip
        - software-properties-common
      when: ansible_os_family == "Debian" 

    - name: Add GitLab package repository
      ansible.builtin.shell: "curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash"
      args:
        creates: /etc/apt/sources.list.d/gitlab_gitlab-ee.list
  
    - name: Temporarily disable swap
      ansible.builtin.command: swapoff -a
      become: true
    
    - name: Install GitLab
      ansible.builtin.apt:
        name: "gitlab-ee=17.10.1-ee.0"
        state: present

    - name: Update /etc/gitlab/gitlab.rb
      ansible.builtin.template:
        src: templates/gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
        owner: root
        group: root
        mode: '0600'
      register: template

    - name: Configure GitLab
      ansible.builtin.shell: "/opt/gitlab/bin/gitlab-ctl reconfigure"
      when: template.changed
      register: reconfigure_output

    - name: Restart GitLab
      ansible.builtin.command: "/opt/gitlab/bin/gitlab-ctl restart"
      register: restart_output

    - name: Create .pgpass and reload consul if hostname is pgbouncer
      ansible.builtin.shell: |
        echo -e "pgbouncerpassword\npgbouncerpassword" | sudo gitlab-ctl write-pgpass \
          --host 127.0.0.1 \
          --database pgbouncer \
          --user pgbouncer \
          --hostuser gitlab-consul
        sudo gitlab-ctl hup pgbouncer
      when: inventory_hostname.startswith('pgbouncer') 

    - name: Check GitLab status
      command: "/opt/gitlab/bin/gitlab-ctl status"
      register: status_output

    - debug:
        var: reconfigure_output.stdout_lines

    - debug:
        var: status_output.stdout_lines

    - debug:
        var: restart_output.stdout_lines

# Consul 확인
# sudo /opt/gitlab/embedded/bin/consul members

# PSQL 확인
# sudo gitlab-ctl patroni members

# PGBouncer 후처리
# gitlab-ctl write-pgpass --host 127.0.0.1 --database pgbouncer --user pgbouncer --hostuser gitlab-consul
# gitlab-ctl pgb-console #  pgbouncerpassword
# show databases ; show clients ;